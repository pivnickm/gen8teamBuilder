{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.array.find-index.js","webpack:///./src/components/list/item/index.jsx","webpack:///./src/components/list/index.jsx","webpack:///./src/components/typeIndicator/index.jsx","webpack:///./src/components/displayHeader/index.jsx","webpack:///./src/components/statTable/index.jsx","webpack:///./src/pages/index.js","webpack:///./node_modules/classnames/index.js"],"names":["$export","$find","KEY","forced","Array","P","F","findIndex","callbackfn","this","arguments","length","undefined","ListItem","className","onClick","pokemon","listItemProps","outputClassName","cn","types","map","type","index","toLowerCase","join","imageClassName","imagePath","form","id","src","alt","name","displayName","defaultProps","List","handleItemClick","availablePokemon","listProps","key","TypeIndicator","DisplayHeader","selectedPokemon","displayHeaderProps","Fragment","slice","StatTable","allDefensiveStats","statTableProps","immunities","superEffective","resistances","forEach","pokemonDefenseList","data","item","colspan","IndexPage","useState","filteredData","setSelectedPokemon","filteredList","filter","includes","defensives","title","indexToRemove","pokemonToAdd","newArr","unshift","pop","hasOwn","hasOwnProperty","classNames","classes","i","arg","argType","push","isArray","inner","apply","call","module","exports"],"mappings":"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","file":"component---src-pages-index-js-bca7816578d9e62fc50d.js","sourcesContent":["'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport * as colors from \"../../../data/colors\";\nimport \"./_index.scss\";\n\nconst ListItem = ({ className, onClick, pokemon, ...listItemProps }) => {\n  const outputClassName = cn(\n    className,\n    \"listItem\",\n    pokemon.types\n      .map((type, index) => `${type.toLowerCase()}${index}`)\n      .join(\" \")\n  );\n  const imageClassName = cn(className, \"listItem_image\");\n  const imagePath = pokemon.form ? `${pokemon.id}-${pokemon.form}` : pokemon.id;\n\n  return (\n    <li\n      className={outputClassName}\n      onClick={() => {\n        onClick(pokemon);\n      }}\n      {...listItemProps}\n    >\n      <img\n        className={imageClassName}\n        src={`/pokemon/${imagePath}.png`}\n        alt={pokemon.name}\n      />\n    </li>\n  );\n};\n\nListItem.displayName = \"ListItem\";\n\nListItem.propTypes = {};\n\nListItem.defaultProps = {};\n\nexport default ListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport ListItem from \"./item\";\n\nimport \"./_index.scss\";\n\nconst List = ({\n  className,\n  handleItemClick,\n  availablePokemon,\n  ...listProps\n}) => {\n  const outputClassName = cn(className, \"list\");\n\n  return (\n    <ul className={outputClassName} {...listProps}>\n      {availablePokemon.map((pokemon, index) => (\n        <ListItem\n          key={`${pokemon.name}`}\n          pokemon={pokemon}\n          onClick={handleItemClick}\n        />\n      ))}\n    </ul>\n  );\n};\n\nList.displayName = \"List\";\n\nList.propTypes = {};\n\nList.defaultProps = {};\n\nexport default List;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport \"./_index.scss\";\n\nconst TypeIndicator = ({ types }) => {\n  return (\n    <div className={\"typeIndicator\"}>\n      {types.map(type => (\n        <span\n          className={cn(\"typeIndicator_type\", `${type.toLowerCase()}0`)}\n          key={type}\n        >\n          {type}\n        </span>\n      ))}\n    </div>\n  );\n};\n\nTypeIndicator.displayName = \"TypeIndicator\";\n\nTypeIndicator.propTypes = {};\n\nTypeIndicator.defaultProps = {};\n\nexport default TypeIndicator;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport TypeIndicator from \"../typeIndicator\";\n\nimport \"./_index.scss\";\n\nconst DisplayHeader = ({\n  className,\n  selectedPokemon,\n  handleItemClick,\n  ...displayHeaderProps\n}) => {\n  const outputClassName = cn(className, \"displayHeader\");\n\n  return (\n    <React.Fragment>\n      <div className={outputClassName} {...displayHeaderProps}>\n        {selectedPokemon\n          .slice(0, selectedPokemon.length / 2)\n          .map((pokemon, index) => {\n            return pokemon === null ? (\n              <div className=\"displayHeader_item displayHeader_pokeball\">\n                <hr className=\"displayHeader_pokeballCenter\" />\n              </div>\n            ) : (\n              <div\n                className=\"displayHeader_item displayHeader_pokeball\"\n                onClick={() => {\n                  handleItemClick(index);\n                }}\n                key={index}\n              >\n                <img\n                  className={\"displayHeader_image\"}\n                  src={`/pokemon/${\n                    pokemon.form ? `${pokemon.id}-${pokemon.form}` : pokemon.id\n                  }.png`}\n                  alt={pokemon.name}\n                />\n                <span>{pokemon.name}</span>\n                <TypeIndicator types={pokemon.types} />\n              </div>\n            );\n          })}\n      </div>\n      <div className={outputClassName} {...displayHeaderProps}>\n        {selectedPokemon\n          .slice(selectedPokemon.length / 2, selectedPokemon.length)\n          .map((pokemon, index) => {\n            return pokemon === null ? (\n              <div className=\"displayHeader_item displayHeader_pokeball\">\n                <hr className=\"displayHeader_pokeballCenter\" />\n              </div>\n            ) : (\n              <div\n                className=\"displayHeader_item displayHeader_pokeball\"\n                onClick={() => {\n                  handleItemClick(index);\n                }}\n                key={index}\n              >\n                <img\n                  className={\"displayHeader_image\"}\n                  src={`/pokemon/${\n                    pokemon.form ? `${pokemon.id}-${pokemon.form}` : pokemon.id\n                  }.png`}\n                  alt={pokemon.name}\n                />\n                <span>{pokemon.name}</span>\n                <TypeIndicator types={pokemon.types} />\n              </div>\n            );\n          })}\n      </div>\n    </React.Fragment>\n  );\n};\n\nDisplayHeader.displayName = \"DisplayHeader\";\n\nDisplayHeader.propTypes = {};\n\nDisplayHeader.defaultProps = {};\n\nexport default DisplayHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport \"./_index.scss\";\n\nconst StatTable = ({ className, allDefensiveStats, ...statTableProps }) => {\n  const outputClassName = cn(className, \"statTable\");\n  const types = [\n    \"Normal\",\n    \"Fire\",\n    \"Water\",\n    \"Electric\",\n    \"Grass\",\n    \"Ice\",\n    \"Fighting\",\n    \"Poison\",\n    \"Ground\",\n    \"Flying\",\n    \"Psychic\",\n    \"Bug\",\n    \"Rock\",\n    \"Ghost\",\n    \"Dragon\",\n    \"Dark\",\n    \"Steel\",\n    \"Fairy\"\n  ];\n  const immunities = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const superEffective = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const resistances = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n  allDefensiveStats.forEach(pokemonDefenseList => {\n    pokemonDefenseList.forEach((type, index) => {\n      if (type > 1) {\n        // 2, 4\n        superEffective[index]++;\n      } else if (type < 1 && type > 0) {\n        // .5, .25\n        resistances[index]++;\n      } else if (type === 0) {\n        // self explantiory...\n        immunities[index]++;\n      }\n    });\n  });\n  return (\n    <React.Fragment>\n      {[\n        { name: \"Immunities\", data: immunities },\n        { name: \"Super Effective\", data: superEffective },\n        { name: \"Resistances\", data: resistances }\n      ].map(item => (\n        <table className={outputClassName} {...statTableProps}>\n          <th colspan=\"18\">{item.name}</th>\n          <tr className=\"statTable_col\">\n            {types.slice(0, types.length / 2).map(type => (\n              <td className={`statTable_cell ${type.toLowerCase()}0`}>\n                {type}\n              </td>\n            ))}\n          </tr>\n          <tr className=\"statTable_col\">\n            {item.data.slice(0, item.data.length / 2).map(type => (\n              <td className=\"statTable_cell\">{type}</td>\n            ))}\n          </tr>\n          <tr className=\"statTable_col\">\n            {types.slice(types.length / 2, types.length).map(type => (\n              <td className={`statTable_cell ${type.toLowerCase()}0`}>\n                {type}\n              </td>\n            ))}\n          </tr>\n          <tr>\n            {item.data\n              .slice(item.data.length / 2, item.data.length)\n              .map(type => (\n                <td className=\"statTable_cell\">{type}</td>\n              ))}\n          </tr>\n        </table>\n      ))}\n    </React.Fragment>\n  );\n};\n\nStatTable.displayName = \"StatTable\";\n\nStatTable.propTypes = {};\n\nStatTable.defaultProps = {};\n\nexport default StatTable;\n","import React, { useState } from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport List from \"../components/list\";\nimport DisplayHeader from \"../components/displayHeader\";\nimport StatTable from \"../components/statTable\";\nimport SEO from \"../components/seo\";\n\nimport data from \"../data/pokedex.json\";\n\nconst IndexPage = () => {\n  const [filteredData, setFilteredData] = useState(data);\n  const [selectedPokemon, setSelectedPokemon] = useState([\n    null,\n    null,\n    null,\n    null,\n    null,\n    null\n  ]);\n  const generations = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n\n  const handleSelectPokemon = pokemonToAdd => {\n    const newArr = selectedPokemon.slice();\n    newArr.unshift(pokemonToAdd);\n    newArr.pop();\n\n    setSelectedPokemon(newArr);\n  };\n\n  const handleRemovePokemon = indexToRemove => {\n    setSelectedPokemon([\n      ...selectedPokemon.slice(0, indexToRemove),\n      ...selectedPokemon.slice(indexToRemove + 1, selectedPokemon.length),\n      null\n    ]);\n  };\n\n  const handleFilterGen = gen => {\n    console.log(gen); // eslint-disable-line\n    const index = filteredData.findIndex(gen);\n    if (index > -1) {\n      setFilteredData([\n        filteredData.slice(0, index),\n        filteredData.slice(index + 1, filteredData.length)\n      ]);\n    } else {\n      filteredData.push();\n    }\n  };\n\n  const filteredList = filteredData.filter(\n    pokemon => !selectedPokemon.includes(pokemon)\n  );\n  const allDefensiveStats = selectedPokemon.map(pokemon => {\n    if (pokemon !== null) {\n      return pokemon.defensives;\n    } else {\n      return [\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n      ];\n    }\n  });\n  return (\n    <Layout>\n      <SEO title=\"Pokemon Sword and Shield Team Builder\" />\n\n      <div>\n        <DisplayHeader\n          selectedPokemon={selectedPokemon}\n          handleItemClick={handleRemovePokemon}\n        />\n        {/* {generations.map((gen, index) => (\n          <button onClick={() => handleFilterGen(gen)}>\n            {gen === 0 ? \"All\" : `Gen ${gen}`}\n          </button>\n        ))} */}\n        <StatTable allDefensiveStats={allDefensiveStats} />\n        <List\n          availablePokemon={filteredList}\n          handleItemClick={handleSelectPokemon}\n        />\n      </div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();"],"sourceRoot":""}