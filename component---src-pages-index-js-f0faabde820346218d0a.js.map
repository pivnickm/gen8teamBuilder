{"version":3,"sources":["webpack:///./src/components/list/item/index.jsx","webpack:///./src/components/list/index.jsx","webpack:///./src/components/displayHeader/index.jsx","webpack:///./src/pages/index.js","webpack:///./node_modules/classnames/index.js"],"names":["ListItem","className","onClick","pokemon","listItemProps","outputClassName","cn","types","map","type","index","join","imageClassName","imagePath","form","id","src","alt","name","displayName","defaultProps","List","handleItemClick","availablePokemon","listProps","key","DisplayHeader","selectedPokemon","displayHeaderProps","IndexPage","useState","setSelectedPokemon","filteredList","data","filter","includes","title","indexToRemove","slice","length","pokemonToAdd","shift","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","push","Array","isArray","inner","apply","call","module","exports"],"mappings":"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","file":"component---src-pages-index-js-f0faabde820346218d0a.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport * as colors from \"../../../data/colors\";\nimport \"./_index.scss\";\n\nconst ListItem = ({ className, onClick, pokemon, ...listItemProps }) => {\n  const outputClassName = cn(\n    className,\n    \"listItem\",\n    pokemon.types.map((type, index) => `${type}${index}`).join(\" \")\n  );\n  const imageClassName = cn(className, \"listItem_image\");\n  const imagePath = pokemon.form ? `${pokemon.id}-${pokemon.form}` : pokemon.id;\n\n  return (\n    <li\n      className={outputClassName}\n      onClick={() => {\n        onClick(pokemon);\n      }}\n      {...listItemProps}\n    >\n      <img\n        className={imageClassName}\n        src={`/pokemon/${imagePath}.png`}\n        alt={pokemon.name}\n      />\n    </li>\n  );\n};\n\nListItem.displayName = \"ListItem\";\n\nListItem.propTypes = {};\n\nListItem.defaultProps = {};\n\nexport default ListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport ListItem from \"./item\";\n\nimport \"./_index.scss\";\n\nconst List = ({\n  className,\n  handleItemClick,\n  availablePokemon,\n  ...listProps\n}) => {\n  const outputClassName = cn(className, \"list\");\n\n  return (\n    <ul className={outputClassName} {...listProps}>\n      {availablePokemon.map((pokemon, index) => (\n        <ListItem\n          key={`${pokemon.name}`}\n          pokemon={pokemon}\n          onClick={handleItemClick}\n        />\n      ))}\n    </ul>\n  );\n};\n\nList.displayName = \"List\";\n\nList.propTypes = {};\n\nList.defaultProps = {};\n\nexport default List;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport \"./_index.scss\";\n\nconst DisplayHeader = ({\n  className,\n  selectedPokemon,\n  handleItemClick,\n  ...displayHeaderProps\n}) => {\n  const outputClassName = cn(className, \"displayHeader\");\n\n  return (\n    <div className={outputClassName} {...displayHeaderProps}>\n      {selectedPokemon.map((pokemon, index) => {\n        return pokemon === null ? (\n          <div className=\"displayHeader_item displayHeader_pokeball\">\n            <hr className=\"displayHeader_pokeballCenter\" />\n          </div>\n        ) : (\n          <div\n            className=\"displayHeader_item\"\n            onClick={() => {\n              handleItemClick(index);\n            }}\n            key={index}\n          >\n            <img\n              className={\"displayHeader_image\"}\n              src={`/pokemon/${\n                pokemon.form ? `${pokemon.id}-${pokemon.form}` : pokemon.id\n              }.png`}\n              alt={pokemon.name}\n            />\n            <span>{pokemon.name}</span>\n            <div className={\"displayHeader_typeWrapper\"}>\n              {pokemon.types.map(type => (\n                <span\n                  className={cn(\"displayHeader_type\", `${type}0`)}\n                  key={type}\n                >\n                  {type}\n                </span>\n              ))}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nDisplayHeader.displayName = \"DisplayHeader\";\n\nDisplayHeader.propTypes = {};\n\nDisplayHeader.defaultProps = {};\n\nexport default DisplayHeader;\n","import React, { useState } from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport List from \"../components/list\";\nimport DisplayHeader from \"../components/displayHeader\";\nimport SEO from \"../components/seo\";\n\nimport data from \"../data/pokedex.json\";\n\nconst IndexPage = () => {\n  const [selectedPokemon, setSelectedPokemon] = useState([\n    null,\n    null,\n    null,\n    null,\n    null,\n    null\n  ]);\n\n  const handleSelectPokemon = pokemonToAdd => {\n    selectedPokemon.shift();\n    setSelectedPokemon([...selectedPokemon, pokemonToAdd]);\n  };\n\n  const handleRemovePokemon = indexToRemove => {\n    setSelectedPokemon([\n      null,\n      ...selectedPokemon.slice(0, indexToRemove),\n      ...selectedPokemon.slice(indexToRemove + 1, selectedPokemon.length)\n    ]);\n  };\n\n  const filteredList = data.filter(\n    pokemon => !selectedPokemon.includes(pokemon)\n  );\n  return (\n    <Layout>\n      <SEO title=\"Pokemon Sword and Shield Team Builder\" />\n\n      <div>\n        <DisplayHeader\n          selectedPokemon={selectedPokemon}\n          handleItemClick={handleRemovePokemon}\n        />\n        <List\n          availablePokemon={filteredList}\n          handleItemClick={handleSelectPokemon}\n        />\n      </div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();"],"sourceRoot":""}