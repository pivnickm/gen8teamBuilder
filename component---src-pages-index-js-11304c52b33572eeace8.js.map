{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.array.find-index.js","webpack:///./src/components/list/item/index.jsx","webpack:///./src/components/list/index.jsx","webpack:///./src/components/typeIndicator/index.jsx","webpack:///./src/components/displayHeader/index.jsx","webpack:///./src/components/statTable/index.jsx","webpack:///./src/pages/index.js","webpack:///./node_modules/classnames/index.js"],"names":["$export","$find","KEY","forced","Array","P","F","findIndex","callbackfn","this","arguments","length","undefined","ListItem","className","onClick","pokemon","outputClassName","cn","types","map","type","index","toLowerCase","join","imagePath","form","id","key","displayName","defaultProps","List","handleItemClick","availablePokemon","listProps","name","TypeIndicator","DisplayHeader","children","selectedPokemon","slice","StatTable","allDefensiveStats","statTableProps","immunities","superEffective","resistances","forEach","pokemonDefenseList","data","defensiveMetric","colSpan","count","IndexPage","location","useState","term","setSearchTerm","counter","setCounter","filteredData","setSelectedPokemon","useEffect","hash","seedData","replace","split","handleSelectPokemon","seedItem","find","item","decodeURI","filter","pokemonToAdd","newArr","isArray","trimmedList","some","nearestIndex","shift","setNavigation","reduce","acc","val","push","window","history","pushState","filteredList","includes","startsWith","defensives","onChange","event","target","value","title","indexToRemove","hasOwn","hasOwnProperty","classNames","classes","i","arg","argType","inner","apply","call","module","exports"],"mappings":"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","file":"component---src-pages-index-js-11304c52b33572eeace8.js","sourcesContent":["'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\nimport { withPrefix } from \"gatsby\";\n\nimport * as colors from \"../../../data/colors\";\nimport \"./_index.scss\";\n\nconst ListItem = ({ className, onClick, pokemon }) => {\n  const outputClassName = cn(\n    className,\n    \"listItem\",\n    pokemon.types\n      .map((type, index) => `${type.toLowerCase()}${index}`)\n      .join(\" \")\n  );\n  const imageClassName = cn(className, \"listItem_image\");\n  const imagePath = pokemon.form ? `${pokemon.id}-${pokemon.form}` : pokemon.id;\n\n  return (\n    <li\n      className={outputClassName}\n      key={imagePath}\n      onClick={() => {\n        onClick(pokemon);\n      }}\n    >\n      <div className={`pokemonSprite pokemonSprite-${imagePath}`} />\n    </li>\n  );\n};\n\nListItem.displayName = \"ListItem\";\n\nListItem.propTypes = {};\n\nListItem.defaultProps = {};\n\nexport default ListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport ListItem from \"./item\";\n\nimport \"./_index.scss\";\n\nconst List = ({\n  className,\n  handleItemClick,\n  availablePokemon,\n  ...listProps\n}) => {\n  const outputClassName = cn(className, \"list\");\n\n  return (\n    <ul className={outputClassName} {...listProps}>\n      {availablePokemon.map((pokemon, index) => (\n        <ListItem\n          key={`${pokemon.name}`}\n          pokemon={pokemon}\n          onClick={handleItemClick}\n        />\n      ))}\n    </ul>\n  );\n};\n\nList.displayName = \"List\";\n\nList.propTypes = {};\n\nList.defaultProps = {};\n\nexport default List;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport \"./_index.scss\";\n\nconst TypeIndicator = ({ types }) => {\n  return (\n    <div className={\"typeIndicator\"}>\n      {types.map(type => (\n        <span\n          className={cn(\"typeIndicator_type\", `${type.toLowerCase()}0`)}\n          key={type}\n        >\n          {type}\n        </span>\n      ))}\n    </div>\n  );\n};\n\nTypeIndicator.displayName = \"TypeIndicator\";\n\nTypeIndicator.propTypes = {};\n\nTypeIndicator.defaultProps = {};\n\nexport default TypeIndicator;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\nimport { withPrefix } from \"gatsby\";\n\nimport TypeIndicator from \"../typeIndicator\";\n\nimport \"./_index.scss\";\n\nconst DisplayHeader = ({ children, selectedPokemon, handleItemClick }) => {\n  return (\n    <div className=\"displayHeader\">\n      <div className=\"displayHeader_inner\">\n        {selectedPokemon\n          .slice(0, selectedPokemon.length / 2)\n          .map((pokemon, index) => {\n            return pokemon === null ? (\n              <div\n                className=\"displayHeader_item displayHeader_pokeball\"\n                key={index}\n              >\n                <hr className=\"displayHeader_pokeballCenter\" />\n              </div>\n            ) : (\n              <div\n                className={`displayHeader_item displayHeader_pokemon ${pokemon.types\n                  .map((type, index) => `${type.toLowerCase()}${index}`)\n                  .join(\" \")}`}\n                onClick={() => {\n                  handleItemClick(index);\n                }}\n                key={index}\n              >\n                <div\n                  className={`pokemonSprite pokemonSprite-${\n                    pokemon.form ? `${pokemon.id}-${pokemon.form}` : pokemon.id\n                  }`}\n                />\n                <span className=\"displayHeader_text\">{pokemon.name}</span>\n                <TypeIndicator types={pokemon.types} />\n              </div>\n            );\n          })}\n      </div>\n      <div className=\"displayHeader_inner\">\n        {selectedPokemon\n          .slice(selectedPokemon.length / 2, selectedPokemon.length)\n          .map((pokemon, index) => {\n            return pokemon === null ? (\n              <div\n                className=\"displayHeader_item displayHeader_pokeball\"\n                key={index}\n              >\n                <hr className=\"displayHeader_pokeballCenter\" />\n              </div>\n            ) : (\n              <div\n                className={`displayHeader_item displayHeader_pokemon ${pokemon.types\n                  .map((type, index) => `${type.toLowerCase()}${index}`)\n                  .join(\" \")}`}\n                onClick={() => {\n                  handleItemClick(index + 3);\n                }}\n                key={index}\n              >\n                <div\n                  className={`pokemonSprite pokemonSprite-${\n                    pokemon.form ? `${pokemon.id}-${pokemon.form}` : pokemon.id\n                  }`}\n                />\n                <span className=\"displayHeader_text\">{pokemon.name}</span>\n                <TypeIndicator types={pokemon.types} />\n              </div>\n            );\n          })}\n      </div>\n      {children}\n    </div>\n  );\n};\n\nDisplayHeader.displayName = \"DisplayHeader\";\n\nDisplayHeader.propTypes = {};\n\nDisplayHeader.defaultProps = {};\n\nexport default DisplayHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport \"./_index.scss\";\nimport \"./_sprites.scss\";\nimport { withPrefix } from \"gatsby\";\n\nconst StatTable = ({ className, allDefensiveStats, ...statTableProps }) => {\n  const outputClassName = cn(className, \"statTable\");\n  const types = [\n    \"Normal\",\n    \"Fire\",\n    \"Water\",\n    \"Electric\",\n    \"Grass\",\n    \"Ice\",\n    \"Fighting\",\n    \"Poison\",\n    \"Ground\",\n    \"Flying\",\n    \"Psychic\",\n    \"Bug\",\n    \"Rock\",\n    \"Ghost\",\n    \"Dragon\",\n    \"Dark\",\n    \"Steel\",\n    \"Fairy\"\n  ];\n  const immunities = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const superEffective = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const resistances = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n  allDefensiveStats.forEach(pokemonDefenseList => {\n    pokemonDefenseList.forEach((type, index) => {\n      if (type > 1) {\n        // 2, 4\n        superEffective[index]++;\n      } else if (type < 1 && type > 0) {\n        // .5, .25\n        resistances[index]++;\n      } else if (type === 0) {\n        // self explantiory...\n        immunities[index]++;\n      }\n    });\n  });\n  return (\n    <div className=\"statTable_wrapper\">\n      {[\n        { name: \"Team Immunities\", data: immunities },\n        { name: \"Team Weaknesses\", data: superEffective },\n        { name: \"Team Resistances\", data: resistances }\n      ].map(defensiveMetric => (\n        <table\n          className={outputClassName}\n          key={defensiveMetric.name}\n          {...statTableProps}\n        >\n          <thead>\n            <tr>\n              <th colSpan=\"18\">{defensiveMetric.name}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"statTable_col\">\n              {types.slice(0, types.length / 2).map(type => (\n                <td className=\"statTable_cell\" key={type}>\n                  <div className={`sprite sprite-Icon_${type}`}>\n                    <span className=\"statTable_typeText\">{type}</span>\n                  </div>\n                </td>\n              ))}\n            </tr>\n            <tr className=\"statTable_col\">\n              {defensiveMetric.data\n                .slice(0, defensiveMetric.data.length / 2)\n                .map((count, index) => (\n                  <td className=\"statTable_cell\" key={index}>\n                    <div\n                      className={cn(\"statTable_cell_text\", {\n                        [\"statTable_cell__caution\"]: count > 2,\n                        [\"statTable_cell__warning\"]: count > 3\n                      })}\n                    >\n                      {count}\n                    </div>\n                  </td>\n                ))}\n            </tr>\n            <tr className=\"statTable_col\">\n              {types.slice(types.length / 2, types.length).map(type => (\n                <td className=\"statTable_cell\" key={type}>\n                  <div className={`sprite sprite-Icon_${type}`}>\n                    <span className=\"statTable_typeText\">{type}</span>\n                  </div>\n                </td>\n              ))}\n            </tr>\n            <tr>\n              {defensiveMetric.data\n                .slice(\n                  defensiveMetric.data.length / 2,\n                  defensiveMetric.data.length\n                )\n                .map((count, index) => (\n                  <td className=\"statTable_cell\" key={index}>\n                    <div\n                      className={cn(\"statTable_cell_text\", {\n                        [\"statTable_cell__caution\"]: count > 2,\n                        [\"statTable_cell__warning\"]: count > 3\n                      })}\n                    >\n                      {count}\n                    </div>\n                  </td>\n                ))}\n            </tr>\n          </tbody>\n        </table>\n      ))}\n    </div>\n  );\n};\n\nStatTable.displayName = \"StatTable\";\n\nStatTable.propTypes = {};\n\nStatTable.defaultProps = {};\n\nexport default StatTable;\n","import React, { useState, useEffect } from \"react\";\n\nimport Layout from \"../components/layout\";\nimport List from \"../components/list\";\nimport DisplayHeader from \"../components/displayHeader\";\nimport StatTable from \"../components/statTable\";\nimport SEO from \"../components/seo\";\n\nimport data from \"../data/galarPokedex.json\";\n\nconst IndexPage = ({ location }) => {\n  const [term, setSearchTerm] = useState(\"\");\n  const [counter, setCounter] = useState(0);\n  const [filteredData, setFilteredData] = useState(data);\n  const [selectedPokemon, setSelectedPokemon] = useState([\n    null,\n    null,\n    null,\n    null,\n    null,\n    null\n  ]);\n  const generations = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n\n  useEffect(() => {\n    if (location.hash) {\n      const seedData = location.hash.replace(\"#\", \"\").split(\",\");\n      handleSelectPokemon(\n        seedData\n          .map(seedItem =>\n            data.find(\n              item =>\n                item.name.toLowerCase() === decodeURI(seedItem).toLowerCase()\n            )\n          )\n          .filter(seedItem => seedItem !== undefined)\n      );\n    }\n  }, []);\n\n  const handleSelectPokemon = pokemonToAdd => {\n    const newArr = selectedPokemon.slice();\n    // if it's an array (multiple at once)\n    // use only the first 6, and add each to their respective index\n    // update the count to reflect the newly added\n    if (Array.isArray(pokemonToAdd)) {\n      const trimmedList = pokemonToAdd.slice(0, 6);\n      trimmedList.forEach((pokemon, index) => {\n        newArr[index] = pokemon;\n      });\n\n      setCounter(counter + trimmedList.length);\n      // if it's just a single pokemon, if the count is less than 6,\n      // add it to the appropriate index\n      // otherwise, remove the first item, and add the new to the end\n    } else {\n      if (counter < 6) {\n        newArr[counter] = pokemonToAdd;\n      } else {\n        if (newArr.some(pokemon => pokemon === null)) {\n          let nearestIndex = newArr.findIndex(pokemon => pokemon === null);\n          newArr[nearestIndex] = pokemonToAdd;\n        } else {\n          newArr.shift();\n          newArr[5] = pokemonToAdd;\n        }\n      }\n\n      setNavigation(\n        newArr.reduce((acc, val) => {\n          if (val !== null) {\n            acc.push(val.name);\n          }\n          return acc;\n        }, [])\n      );\n      setCounter(counter + 1);\n    }\n    // set these all at once because set seems to be async like setState\n    setSelectedPokemon(newArr);\n  };\n\n  const setNavigation = pokemon => {\n    // navigate(withPrefix(`/#${pokemon}`));\n    if (window.history.pushState) {\n      window.history.pushState(null, null, `#${pokemon}`);\n    } else {\n      location.hash = `#${pokemon}`;\n    }\n  };\n\n  const handleRemovePokemon = indexToRemove => {\n    const newArr = [\n      ...selectedPokemon.slice(0, indexToRemove),\n      ...selectedPokemon.slice(indexToRemove + 1, selectedPokemon.length),\n      null\n    ];\n\n    setNavigation(\n      newArr.reduce((acc, val) => {\n        if (val !== null) {\n          acc.push(val.name);\n        }\n        return acc;\n      }, [])\n    );\n    setSelectedPokemon(newArr);\n  };\n\n  // const handleFilterGen = gen => {\n  //   console.log(gen); // eslint-disable-line\n  //   const index = filteredData.findIndex(gen);\n  //   if (index > -1) {\n  //     setFilteredData([\n  //       filteredData.slice(0, index),\n  //       filteredData.slice(index + 1, filteredData.length)\n  //     ]);\n  //   } else {\n  //     filteredData.push();\n  //   }\n  // };\n\n  const filteredList = filteredData\n    .filter(pokemon => !selectedPokemon.includes(pokemon))\n    .filter(pokemon =>\n      pokemon.name.toLowerCase().startsWith(term.toLowerCase())\n    );\n  const allDefensiveStats = selectedPokemon.map(pokemon => {\n    if (pokemon !== null) {\n      return pokemon.defensives;\n    } else {\n      return [\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n      ];\n    }\n  });\n  return (\n    <Layout onChange={event => setSearchTerm(event.target.value)}>\n      <SEO title=\"Pokemon Sword and Shield Team Builder\" />\n\n      <div>\n        <DisplayHeader\n          selectedPokemon={selectedPokemon}\n          handleItemClick={handleRemovePokemon}\n        >\n          <div>\n            {/* {generations.map((gen, index) => (\n              <button onClick={() => handleFilterGen(gen)}>\n                {gen === 0 ? \"All\" : `Gen ${gen}`}\n              </button>\n            ))} */}\n          </div>\n        </DisplayHeader>\n        <StatTable allDefensiveStats={allDefensiveStats} />\n        <List\n          availablePokemon={filteredList}\n          handleItemClick={handleSelectPokemon}\n        />\n      </div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();"],"sourceRoot":""}